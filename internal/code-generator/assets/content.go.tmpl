package slinguist

// CODE GENERATED AUTOMATICALLY WITH gopkg.in/src-d/simple-linguist.v1/internal/code-generator
// THIS FILE SHOULD NOT BE EDITED BY HAND
// Extracted from github/linguist commit: {{ getCommit }}

import (
	"regexp"
)

type languageMatcher func ([]byte) (string, bool)

var contentMatchers = map[string]languageMatcher{
	{{ range $index, $disambiguator := . -}}
	{{ printf "%q" $disambiguator.Extension }}: func(i []byte) (string, bool) {
		{{ range $i, $language := $disambiguator.Languages -}}

		{{- if not (avoidLanguage $language) }}
		{{- if gt (len $language.Heuristics) 0 }}
		{{- if gt $i 0 }} else {{ end -}} 
		if {{- range $j, $heuristic := $language.Heuristics }} {{ $heuristic.Name }}.Match(i) 
		{{- if lt $j (len $language.LogicRelations) }} {{index $language.LogicRelations $j}} {{- end -}} {{ end }} {
			return {{ printf "%q" $language.Language }}, true
		}
		
		{{- end -}}
		{{- end -}}
		{{- end}}
	
		return {{ returnLanguage $disambiguator.Languages }}, {{ safeLanguage $disambiguator.Languages }}
	},
	{{ end -}}
}

var (
    {{ range $index, $heuristic := getAllHeuristics . -}}
    {{ $heuristic.Name }} = regexp.MustCompile(`{{ $heuristic.Regexp }}`)
    {{ end -}}
)